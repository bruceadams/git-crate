#+TITLE:     Request Map
#+AUTHOR:    Hugo Duncan
#+EMAIL:     hugo_duncan@yahoo.com
#+DATE:      2010-06-17 Thu
#+DESCRIPTION: Pallet Request Map
#+KEYWORDS: pallet request map
#+LANGUAGE:  en
#+OPTIONS:   H:3 num:nil toc:nil \n:nil @:t ::t |:t ^:t -:t f:t *:t <:t
#+OPTIONS:   TeX:t LaTeX:nil skip:nil d:nil todo:t pri:nil tags:not-in-toc
#+INFOJS_OPT: view:nil toc:nil ltoc:t mouse:underline buttons:0 path:http://orgmode.org/org-info.js
#+EXPORT_SELECT_TAGS: export
#+EXPORT_EXCLUDE_TAGS: noexport
#+LINK_UP: index.html
#+LINK_HOME: ../index.html
#+property: exports code
#+property: results output
#+property: cache true
#+STYLE: <link rel="stylesheet" type="text/css" href="../doc.css" />

#+MACRO: clojure [[http://clojure.org][Clojure]]
#+MACRO: jclouds [[http://jclouds.org][jclouds]]

The request map is used to accumulate the configuration data, and the results of
execution.

The request map has some well defined keys:

- :node-type : The pallet defnode type for the current node
- :target-id : The id for the current node
- :target-node : The jclouds node object for the current node
- :all-nodes : The jclouds node objects for all nodes in the provider
- :target-nodes : The jclouds node objects for all nodes in the current operation target
- :parameters : The parameters used for cross-crate configuration
- :results : the result of executing a converge or lift
- :compute : The compute service
- :compute-service : A map of :provider, :identity, :credential, and optionally
  :extensions for constructing a jclouds compute service
- :blobstore : The blobstore service
- :user : The admin user to use on the nodes
- :invocations : the invocation list of resources to run on each node
- :cmds : merged invocation functions
